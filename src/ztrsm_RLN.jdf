extern "C" %{
/*
 *  Copyright (c) 2010-2024
 *
 *  The University of Tennessee and The University
 *  of Tennessee Research Foundation.  All rights
 *  reserved.
 *
 * @precisions normal z -> s d c
 *
 */
#include "dplasma/config.h"
#if defined(DPLASMA_HAVE_CUDA)
#include <cublas.h>
#endif  /* defined(DPLASMA_HAVE_CUDA) */
#include "dplasmajdf.h"
#include "parsec/data_dist/matrix/matrix.h"

%}

side      [type = "dplasma_enum_t"]
uplo      [type = "dplasma_enum_t"]
trans     [type = "dplasma_enum_t"]
diag      [type = "dplasma_enum_t"]
alpha     [type = "dplasma_complex64_t"]
descA     [type = "const parsec_tiled_matrix_t*"]
descB     [type = "parsec_tiled_matrix_t*"]

hip_handles_infokey     [type = "int" hidden = on default = "parsec_info_lookup(&parsec_per_stream_infos, \"DPLASMA::HIP::HANDLES\", NULL)" ]

ztrsm(k,m) [ flops = inline_c %{ return FLOPS_ZTRSM(side, CLEAN_MB(descB, m), CLEAN_NB(descB, k)); %}]
  /* Execution space */
  k = 0 .. (descB->nt-1)
  m = 0 .. (descB->mt-1)

  : descB(m,(descB->nt-1)-k)

  READ  A <- A ztrsm_in_A0(k)

  RW    B <- (0==k) ? descB(m,(descB->nt-1)-k)
          <- (k>=1) ? E zgemm(k-1, m, k)
          -> (descB->nt>=(2+k)) ? C zgemm(k, m, (k+1)..(descB->nt-1))
          -> descB(m,(descB->nt-1)-k)

BODY [type=HIP]
{
    int tempmm = ((m)==(descB->mt-1)) ? (descB->m-(m*descB->mb)) : descB->mb;
    int tempkn = ((k)==(0)) ? (descB->n-((descB->nt-1)*descB->nb)) : descB->nb;
    int lda = BLKLDD( descA, (descB->nt-1)-k );
    int ldb = BLKLDD( descB, m );
#if defined(PRECISION_z) || defined(PRECISION_c)
    hipblasDoubleComplex lalpha = {1., 0.};
    if(k == 0) {
        lalpha.x = creal(alpha); lalpha.y = cimag(alpha);
    }
#else
    dplasma_complex64_t lalpha = ((k)==(0)) ? (alpha) : (dplasma_complex64_t)(1.0);
#endif

    hipblasStatus_t status;
    dplasma_hip_handles_t *handles = parsec_info_get(&gpu_stream->infos, hip_handles_infokey);
    assert(NULL != handles);
    status = hipblasZtrsm( handles->hipblas_handle, dplasma_hipblas_side(side), dplasma_hipblas_fill(uplo), dplasma_hipblas_op(trans), dplasma_hipblas_diag(diag),
                         tempmm, tempkn, &lalpha,
                         (hipblasDoubleComplex*)A, lda,
                         (hipblasDoubleComplex*)B, ldb);
    DPLASMA_HIPBLAS_CHECK_ERROR( "hipblasZtrsm ", status, {return PARSEC_HOOK_RETURN_ERROR;} );
}
END

BODY
{
    int tempmm = ((m)==(descB->mt-1)) ? (descB->m-(m*descB->mb)) : descB->mb;
    int tempkn = ((k)==(0)) ? (descB->n-((descB->nt-1)*descB->nb)) : descB->nb;
    int lda = BLKLDD( descA, (descB->nt-1)-k );
    int ldb = BLKLDD( descB, m );
    dplasma_complex64_t lalpha = (k==0) ? alpha : (dplasma_complex64_t)1.0;

        CORE_ztrsm(side, uplo, trans, diag,
                   tempmm, tempkn, lalpha,
                   A /* descA((descB->nt-1)-k,(descB->nt-1)-k) */, lda,
                   B /* descB(m,(descB->nt-1)-k) */, ldb );

    printlog("CORE_ztrsm(%d, %d)\n"
             "\t(side, uplo, trans, diag, tempmm, tempkn, lalpha, descA(%d,%d)[%p], lda, descB(%d,%d)[%p], ldb)\n",
             k, m, (descB->nt-1)-k, (descB->nt-1)-k, A, m, (descB->nt-1)-k, B);
}
END

/*
 * Pseudo-task
 */
ztrsm_in_A0(k) [profile = off]
  k = 0 .. (descB->nt-1)

  : descA((descB->nt-1)-k,(descB->nt-1)-k)

  RW A <- descA((descB->nt-1)-k,(descB->nt-1)-k)
       -> A ztrsm(k,0..(descB->mt-1))
BODY
{
    /* nothing */
}
END


zgemm(k,m,n) [ flops = inline_c%{ return FLOPS_ZGEMM(CLEAN_MB(descB, m), descB->nb, CLEAN_NB(descB, k)); %} ]
  /* Execution space */
  k = 0     .. (descB->nt-2)
  m = 0     .. (descB->mt-1)
  n = (k+1) .. (descB->nt-1)

  : descB(m,(descB->nt-1)-n)

  READ  C <- B ztrsm(k, m)
  READ  D <- D zgemm_in_A0(k,n)

  RW    E <- (k>=1) ? E zgemm(k-1, m, n)
          <- (0==k) ? descB(m,(descB->nt-1)-n)
          -> (n>=(k+2)) ? E zgemm(k+1, m, n)
          -> ((k+1)==n) ? B ztrsm(n, m)

BODY [type=CUDA]
{
#if defined(PRECISION_z) || defined(PRECISION_c)
    cuDoubleComplex mzone = make_cuDoubleComplex(-1., 0.);
    cuDoubleComplex lalpha = (k == 0) ? make_cuDoubleComplex(creal(alpha), cimag(alpha))
                                      : make_cuDoubleComplex(1.0, 0.0);
#else
    dplasma_complex64_t mzone = -1.;
    dplasma_complex64_t lalpha = ((k)==(0)) ? (alpha) : (dplasma_complex64_t)(1.0);
#endif

    int tempmm = ((m)==(descB->mt-1)) ? (descB->m-(m*descB->mb)) : descB->mb;
    int tempkn = ((k)==(0)) ? (descB->n-((descB->nt-1)*descB->nb)) : descB->nb;
    int ldb = BLKLDD( descB, m );
    int lda = BLKLDD( descA, (descB->nt-1)-k );

    cublasStatus_t status;

    cublasSetKernelStream( parsec_body.stream );
    cublasZgemm( 'N', 'N',
                         tempmm, descB->nb, tempkn,
                         mzone, (cuDoubleComplex*)C, ldb,
                                (cuDoubleComplex*)D, lda,
                         lalpha, (cuDoubleComplex*)E, ldb );
    status = cublasGetError();
    PARSEC_CUDA_CHECK_ERROR( "cublasZgemm ", status, {return PARSEC_HOOK_RETURN_ERROR;} );
}
END

BODY [type=HIP]
{
#if defined(PRECISION_z) || defined(PRECISION_c)
    hipblasDoubleComplex mzone = {-1., 0.};
    hipblasDoubleComplex lalpha = {1., 0.};
    if(k == 0) {
        lalpha.x = creal(alpha); lalpha.y = cimag(alpha);
    }
#else
    dplasma_complex64_t mzone = -1.;
    dplasma_complex64_t lalpha = ((k)==(0)) ? (alpha) : (dplasma_complex64_t)(1.0);
#endif

    int tempmm = ((m)==(descB->mt-1)) ? (descB->m-(m*descB->mb)) : descB->mb;
    int tempkn = ((k)==(0)) ? (descB->n-((descB->nt-1)*descB->nb)) : descB->nb;
    int ldb = BLKLDD( descB, m );
    int lda = BLKLDD( descA, (descB->nt-1)-k );

    hipblasStatus_t status;
    dplasma_hip_handles_t *handles = parsec_info_get(&gpu_stream->infos, hip_handles_infokey);
    assert(NULL != handles);
    status = hipblasZgemm( handles->hipblas_handle, HIPBLAS_OP_N, HIPBLAS_OP_N,
                         tempmm, descB->nb, tempkn,
                         &mzone,  (hipblasDoubleComplex*)C, ldb,
                                  (hipblasDoubleComplex*)D, lda,
                         &lalpha, (hipblasDoubleComplex*)E, ldb );
    DPLASMA_HIPBLAS_CHECK_ERROR( "hipblasZgemm ", status, {return PARSEC_HOOK_RETURN_ERROR;} );
}
END

BODY
{
    int tempmm = ((m)==(descB->mt-1)) ? (descB->m-(m*descB->mb)) : descB->mb;
    int tempkn = ((k)==(0)) ? (descB->n-((descB->nt-1)*descB->nb)) : descB->nb;
    int ldb = BLKLDD( descB, m );
    int lda = BLKLDD( descA, (descB->nt-1)-k );
    dplasma_complex64_t lalpha = (k==0) ? alpha : (dplasma_complex64_t)1.0;

        CORE_zgemm(dplasmaNoTrans, dplasmaNoTrans,
                   tempmm, descB->nb, tempkn,
                   -1.0,   C /* descB(m,             (descB->nt-1)-k) */, ldb,
                           D /* descA((descB->nt-1)-k,(descB->nt-1)-n) */, lda,
                   lalpha, E /* descB(m,             (descB->nt-1)-n) */, ldb );

    printlog("CORE_zgemm(%d, %d, %d)\n"
             "\t(dplasmaNoTrans, dplasmaNoTrans, tempmm, descB->nb, tempkn, mzone, descB(%d,%d)[%p], ldb, descA(%d,%d)[%p], lda, lalpha, descB(%d,%d)[%p], ldb)\n",
             k, m, n, m, (descB->nt-1)-k, C, (descB->nt-1)-k, (descB->nt-1)-n, D, m, (descB->nt-1)-n, E);
}
END

/*
 * Pseudo-task
 */
zgemm_in_A0(k,n) [profile = off]
  k = 0     .. (descB->nt-2)
  n = (k+1) .. (descB->nt-1)

  : descA((descB->nt-1)-k,(descB->nt-1)-n)

  RW D <- descA((descB->nt-1)-k,(descB->nt-1)-n)
       -> D zgemm(k,0..(descB->mt-1),n)
BODY
{
    /* nothing */
}
END
