extern "C" %{
/*
 *  Copyright (c) 2010-2020
 *
 *  The University of Tennessee and The University
 *  of Tennessee Research Foundation.  All rights
 *  reserved.
 *
 * @precisions normal z -> s d c
 *
 */
#include "dplasmajdf.h"
#include "parsec/data_dist/matrix/matrix.h"

%}

side      [type = "dplasma_enum_t"]
uplo      [type = "dplasma_enum_t"]
trans     [type = "dplasma_enum_t"]
diag      [type = "dplasma_enum_t"]
alpha     [type = "dplasma_complex64_t"]
descA     [type = "const parsec_tiled_matrix_t*"]
descB     [type = "parsec_tiled_matrix_t*"]


ztrsm(k,n) [ flops = inline_c %{ return FLOPS_ZTRSM(side, CLEAN_MB(descB, k), CLEAN_NB(descB, n)); %}]
  /* Execution space */
  k = 0 .. (descB->mt-1)
  n = 0 .. (descB->nt-1)

  : descB((descB->mt-1)-k,n)

  READ  A <- A ztrsm_in_A0(k)

  RW    B <- (0==k) ? descB((descB->mt-1)-k,n)
          <- (k>=1) ? E zgemm(k-1, k, n)
          -> descB((descB->mt-1)-k,n)
          -> (descB->mt>=(2+k)) ? D zgemm(k, (k+1)..(descB->mt-1), n)

BODY
{
    int tempkm = ((k)==(0)) ? (descB->m-((descB->mt-1)*descB->mb)) : descB->mb;
    int tempnn = ((n)==(descB->nt-1)) ? (descB->n-(n*descB->nb)) : descB->nb;
    dplasma_complex64_t lalpha = ((k)==(0)) ? (alpha) : (dplasma_complex64_t)(1.0);
    int lda = BLKLDD( descA, (descB->mt-1)-k );
    int ldb = BLKLDD( descB, (descB->mt-1)-k );

        CORE_ztrsm(side, uplo, trans, diag,
                   tempkm, tempnn, lalpha,
                   A /* descA((descB->mt-1)-k,(descB->mt-1)-k) */, lda,
                   B /* descB((descB->mt-1)-k,n) */, ldb );

    printlog("CORE_ztrsm(%d, %d)\n"
             "\t(side, uplo, trans, diag, tempkm, tempnn, lalpha, descA(%d,%d)[%p], lda, descB(%d,%d)[%p], ldb)\n",
             k, n, (descB->mt-1)-k, (descB->mt-1)-k, A, (descB->mt-1)-k, n, B);
}
END

/*
 * Pseudo-task
 */
ztrsm_in_A0(k) [profile = off]
  k = 0 .. (descB->mt-1)

  : descA((descB->mt-1)-k,(descB->mt-1)-k)

  RW A <- descA((descB->mt-1)-k,(descB->mt-1)-k)
       -> A ztrsm(k,0..(descB->nt-1))
BODY
{
    /* nothing */
}
END



zgemm(k,m,n) [ flops = inline_c%{ return FLOPS_ZGEMM(descB->mb, CLEAN_NB(descB, n), CLEAN_MB(descB, k)); %} ]
  /* Execution space */
  k = 0     .. (descB->mt-2)
  m = (k+1) .. (descB->mt-1)
  n = 0     .. (descB->nt-1)

  : descB((descB->mt-1)-m,n)

  READ  C <- C zgemm_in_A0(k,m)

  READ  D <- B ztrsm(k, n)
  RW    E <- (k>=1) ? E zgemm(k-1, m, n)
          <- (0==k) ? descB((descB->mt-1)-m,n)
          -> ((1+k)==m) ? B ztrsm(m, n)
          -> (m>=(k+2)) ? E zgemm(k+1, m, n)

BODY [type=CUDA
      weight=(n+1-k)]
{
#if defined(PRECISION_z) || defined(PRECISION_c)
    cuDoubleComplex mzone = make_cuDoubleComplex(-1., 0.);
    cuDoubleComplex lalpha = (k == 0) ? make_cuDoubleComplex(creal(alpha), cimag(alpha))
                                      : make_cuDoubleComplex(1.0, 0.0);
#else
    dplasma_complex64_t mzone = -1.;
    dplasma_complex64_t lalpha = ((k)==(0)) ? (alpha) : (dplasma_complex64_t)(1.0);
#endif

    int tempnn = ((n)==(descB->nt-1)) ? (descB->n-(n*descB->nb)) : descB->nb;
    int tempkm = ((k)==(0)) ? (descB->m-((descB->mt-1)*descB->mb)) : descB->mb;
    int lda  = BLKLDD( descA, (descB->mt-1)-k );
    int ldb  = BLKLDD( descB, (descB->mt-1)-k );
    int ldbm = BLKLDD( descB, (descB->mt-1)-m );

    cublasStatus_t status;

    cublasSetKernelStream( parsec_body.stream );
    cublasZgemm( dplasma_lapack_const(trans), 'N',
                         descB->mb, tempnn, tempkm,
                         mzone,  (cuDoubleComplex*)C, lda,
                                 (cuDoubleComplex*)D, ldb,
                         lalpha, (cuDoubleComplex*)E, ldbm );
    status = cublasGetError();
    PARSEC_CUDA_CHECK_ERROR( "cublasZgemm ", status,
                             {return -1;} );
}
END

BODY
{
    int tempnn = ((n)==(descB->nt-1)) ? (descB->n-(n*descB->nb)) : descB->nb;
    int tempkm = ((k)==(0)) ? (descB->m-((descB->mt-1)*descB->mb)) : descB->mb;
    int lda  = BLKLDD( descA, (descB->mt-1)-k );
    int ldb  = BLKLDD( descB, (descB->mt-1)-k );
    int ldbm = BLKLDD( descB, (descB->mt-1)-m );
    dplasma_complex64_t lalpha = ((k)==(0)) ? (alpha) : (dplasma_complex64_t)(1.0);

        CORE_zgemm(trans, dplasmaNoTrans,
                   descB->mb, tempnn, tempkm,
                   -1.0,   C /* descA((descB->mt-1)-k,(descB->mt-1)-m) */, lda,
                           D /* descB((descB->mt-1)-k,n) */,              ldb,
                   lalpha, E /* descB((descB->mt-1)-m,n) */,              ldbm );

    printlog("CORE_zgemm(%d, %d, %d)\n"
             "\t(trans, dplasmaNoTrans, descB->mb, tempnn, tempkm, mzone, descA(%d,%d)[%p], lda, descB(%d,%d)[%p], ldb, lalpha, descB(%d,%d)[%p], descB->mb)\n",
             k, m, n, (descB->mt-1)-k, (descB->mt-1)-m, C, (descB->mt-1)-k, n, D, (descB->mt-1)-m, n, E);
}
END

/*
 * Pseudo-task
 */
zgemm_in_A0(k,m) [profile = off]
  k = 0     .. (descB->mt-2)
  m = (k+1) .. (descB->mt-1)

  : descA((descB->mt-1)-k,(descB->mt-1)-m)

  RW C <- descA((descB->mt-1)-k,(descB->mt-1)-m)
       -> C zgemm(k,m,0..(descB->nt-1))
BODY
{
    /* nothing */
}
END
