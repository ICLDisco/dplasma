extern "C" %{
/*
 * Copyright (c) 2010-2022 The University of Tennessee and The University
 *                         of Tennessee Research Foundation.  All rights
 *                         reserved.
 *
 * @precisions normal z -> z c d s
 *
 */
#include "dplasmajdf.h"
#include "parsec/data_dist/matrix/matrix.h"

%}

uplo      [type = "dplasma_enum_t"]
trans     [type = "dplasma_enum_t"]
alpha     [type = "dplasma_complex64_t"]
descA     [type = "const parsec_tiled_matrix_t*"]
beta      [type = "dplasma_complex64_t"]
descC     [type = "parsec_tiled_matrix_t*"]

/* Look ahead on both dimensions */
lookX  [type = "int" hidden=on default="dplasma_aux_getGEMMLookahead(descC)"]


zsyrk(n, k) [ flops = inline_c %{ return FLOPS_ZSYRK(CLEAN_NB(descC, n), CLEAN_MB(descA, k)); %} ]
  /* Execution Space */
  n = 0..(descC->nt-1)
  k = 0..(descA->mt-1)

  /* Locality */
  : descC(n,n)

  READ  A    <- A zsyrk_in_data_A0(n, k)
  RW    C    <- ((0==k)) ? descC(n,n)
             <- ((k>=1)) ? C zsyrk(n, k-1)
             -> ((descA->mt>=(2+k))) ? C zsyrk(n, k+1)
             -> ((descA->mt==(1+k))) ? descC(n,n)

  CTL ctlx -> (k < (descA->nt-lookX)) ? ctlx zsyrk_in_data_A0(n, k+lookX)

BODY
{
    int tempnn = (n==(descC->nt-1)) ? (descC->n-(n*descC->nb)) : descC->nb;
    int tempkm = (k==(descA->mt-1)) ? (descA->m-(k*descA->mb)) : descA->mb;
    int ldak = BLKLDD( descA, k );
    dplasma_complex64_t zbeta = (k==0) ? beta : (dplasma_complex64_t)1.;
    int ldcn = BLKLDD( descC, n );

    printlog("CORE_zsyrk(%d, %d)\n"
             "\t(uplo, trans, tempnn, tempkm, alpha, A(%d,%d)[%p], ldak, zbeta, C(%d,%d)[%p], ldcn)\n",
             n, k, k, n, A, n, n, C);
    CORE_zsyrk(uplo, trans, tempnn,
               tempkm, alpha, A /* descA(k,n) */,
               ldak, zbeta, C /* descC(n,n) */,
               ldcn );
}
END

zsyrk_in_data_A0(n, k) [profile = off]
  /* Execution Space */
  n = 0..(descC->nt-1)
  k = 0..(descA->mt-1)

  /* Locality */
  : descA(k,n)

  READ  A    <- descA(k,n)
             -> A zsyrk(n, k)
  CTL ctlx   <- (k >= lookX) ? ctlx zsyrk(n, k-lookX)

BODY
{
    /* nothing */
}
END

zgemm(n, m, k) [ flops = inline_c %{ return FLOPS_ZGEMM(CLEAN_MB(descC, m), CLEAN_NB(descC, n), CLEAN_MB(descA, k)); %} ]
  /* Execution Space */
  n = 0..(descC->mt-2)
  m = (n+1)..(descC->mt-1)
  k = 0..(descA->mt-1)

  /* Locality */
  : descC(m,n)

  READ  A    <- A zgemm_in_data_A0(m, k)
  READ  B    <- B zgemm_in_data_A1(n, k)
  RW    C    <- ((k>=1)) ? C zgemm(n, m, k-1)
             <- ((0==k)) ? descC(m,n)
             -> ((descA->mt==(k+1))) ? descC(m,n)
             -> ((descA->mt>=(2+k))) ? C zgemm(n, m, k+1)

  CTL ctla -> (k < (descA->nt-lookX)) ? ctla zgemm_in_data_A0(m, k+lookX)
  CTL ctlb -> (k < (descA->nt-lookX)) ? ctlb zgemm_in_data_A1(n, k+lookX)

BODY
{
    int tempmm = ((m)==(descC->mt-1)) ? (descC->m-(m*descC->mb)) : descC->mb;
    int tempnn = (n==(descC->nt-1)) ? (descC->n-(n*descC->nb)) : descC->nb;
    int tempkm = (k==(descA->mt-1)) ? (descA->m-(k*descA->mb)) : descA->mb;
    int ldak = BLKLDD( descA, k );
    dplasma_complex64_t zbeta = (k==0) ? beta : ((dplasma_complex64_t)1.);
    int ldcm = BLKLDD( descC, m );

    printlog("CORE_zgemm(%d, %d, %d)\n"
             "\t(trans, dplasmaNoTrans, tempmm, tempnn, tempkm, zalpha, A(%d,%d)[%p], ldak, A(%d,%d)[%p], ldak, zbeta, C(%d,%d)[%p], ldcm)\n",
             n, m, k, k, m, A, k, n, B, m, n, C);
    CORE_zgemm(trans, dplasmaNoTrans, tempmm,
               tempnn, tempkm, alpha,
               A /* descA(k,m) */, ldak, B /* descA(k,n) */,
               ldak, zbeta, C /* descC(m,n) */,
               ldcm );
}
END

zgemm_in_data_A1(n, k) [profile = off]
  /* Execution Space */
  n = 0..(descC->mt-2)
  k = 0..(descA->mt-1)

  /* Locality */
  : descA(k,n)

  READ  B    <- descA(k,n)
             -> B zgemm(n, (n+1)..(descC->mt-1), k)
  CTL ctlb   <- (k >= lookX) ? ctlb zgemm(n, (n+1) .. (descC->mt-1), k-lookX)

BODY
{
    /* nothing */
}
END

zgemm_in_data_A0(m, k) [profile = off]
  /* Execution Space */
  m = 1..(descC->mt-1) /* tight bound is (n+1)..(descC->mt-1) */
  k = 0..(descA->mt-1)

  /* Locality */
  : descA(k,m)

  READ  A    <- descA(k,m)
             -> A zgemm(0..(descC->mt-2), m, k)
  CTL ctla   <- (k >= lookX) ? ctla zgemm(0 .. (m-1), m, k-lookX)

BODY
{
    /* nothing */
}
END
