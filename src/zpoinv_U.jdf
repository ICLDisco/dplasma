extern "C" %{
/*
 * Copyright (c) 2010-2020 The University of Tennessee and The University
 *                         of Tennessee Research Foundation. All rights
 *                         reserved.
 * Copyright (c) 2013      Inria. All rights reserved.
 * $COPYRIGHT
 *
 *
 * @precisions normal z -> s d c
 *
 */
#include "dplasmajdf.h"
#include "parsec/data_dist/matrix/matrix.h"

#if defined(DPLASMA_HAVE_CUDA)
#include <cublas.h>
#endif  /* defined(DPLASMA_HAVE_CUDA) */

%}

descA     [type = "parsec_tiled_matrix_t*"]

potrf_zpotrf(k)
  /* Execution Space */
  k = 0..(descA->nt-1)

  /* Locality */
  : descA(k,k)

  RW    A    <- (k == 0) ? descA(k, k) : B potrf_zherk(k-1, k)
             -> A potrf_ztrsm(k, (k+1)..(descA->nt-1))
             -> A trtri_ztrsmR(k, 0..(k-1))
             -> A trtri_ztrsmL(k, (k+1)..(descA->nt-1))
             -> A trtri_ztrtri(k)

; 44

BODY
{
    int tempkm = (k == (descA->nt-1)) ? (descA->n - k * descA->nb) : descA->nb;
    int ldak = BLKLDD( descA, k );
    int info = 0;


    printlog("CORE_potrf_zpotrf(%d)\n"
             "\t(dplasmaUpper, tempkm, A(%d,%d)[%p], ldak, descA->nb*k)\n",
             k, k, k, A);

    CORE_zpotrf(dplasmaUpper, tempkm,
                A /* descA(k,k) */, ldak, &info );
}
END

potrf_ztrsm(k, m)
  /* Execution Space */
  k = 0    ..(descA->nt-2)
  m = (k+1)..(descA->nt-1)

  /* Locality */
  : descA(k,m)

  READ  A    <- A potrf_zpotrf(k)
  RW    B    <- (k == 0) ? descA(k, m) : C potrf_zgemm(k-1, m, k)
             -> A potrf_zherk(k, m)
             -> A potrf_zgemm(k, (m+1)..(descA->nt-1), m)
             -> B potrf_zgemm(k, m, (k+1)..(m-1))
             -> B trtri_ztrsmL(k, m)

; 40

BODY
{
    int tempmm = (m == (descA->nt-1)) ? (descA->n - m * descA->nb) : descA->nb;
    int ldak = BLKLDD( descA, k );


    printlog("CORE_potrf_ztrsm(%d, %d)\n"
             "\t(dplasmaLeft, dplasmaUpper, dplasmaConjTrans, dplasmaNonUnit, descA->nb, tempmm, 1., A(%d,%d)[%p], ldak, A(%d,%d)[%p], ldak)\n",
             k, m, k, k, A, k, m, B);

    CORE_ztrsm(dplasmaLeft, dplasmaUpper, dplasmaConjTrans, dplasmaNonUnit,
               descA->nb, tempmm,
               1., A /* descA(k,k) */, ldak,
                   B /* descA(k,m) */, ldak );
}
END

potrf_zherk(k, m)
  /* Execution Space */
  k = 0    ..(descA->nt-2)
  m = (k+1)..(descA->nt-1)

  /* Locality */
  : descA(m,m)

  READ  A    <- B potrf_ztrsm(k, m)
  RW    B    <- (k == 0) ? descA(m, m) : B potrf_zherk(k-1, m)
             -> (m == (k+1)) ? A potrf_zpotrf(m) : B potrf_zherk(k+1, m)

  CTL   ctl0 -> ctl0 trtri_ztrsmL(k, m)

; 40

BODY
{
    int tempmm = (m == (descA->nt-1)) ? (descA->n - m * descA->nb) : descA->nb;
    int ldak = BLKLDD( descA, k );
    int ldam = BLKLDD( descA, m );


    printlog("CORE_potrf_zherk(%d, %d)\n"
             "\t(dplasmaUpper, dplasmaConjTrans, tempmm, descA->mb, -1., A(%d,%d)[%p], ldak, 1., A(%d,%d)[%p], ldam)\n",
             k, m, k, m, A, m, m, B);
    CORE_zherk(dplasmaUpper, dplasmaConjTrans,
               tempmm, descA->mb,
               -1., A /* descA(k,m) */, ldak,
                1., B /* descA(m,m) */, ldam );
}
END

potrf_zgemm(k, m, n)
  /* Execution Space */
  k = 0    ..(descA->nt-2)
  m = (k+2)..(descA->nt-1)
  n = (k+1)..(m-1)

  /* Locality */
  : descA(n,m)

  READ  A    <- B potrf_ztrsm(k, n)
  READ  B    <- B potrf_ztrsm(k, m)
  RW    C    <- (k == 0) ? descA(n, m) : C potrf_zgemm(k-1, m, n)
             -> (n == (k+1)) ? B potrf_ztrsm(n, m) : C potrf_zgemm(k+1, m, n)

  CTL   ctl1 -> ctl1 trtri_ztrsmL(k, m)
  CTL   ctl2 -> ctl2 trtri_ztrsmL(k, n)

; 40

BODY [type=CUDA]
{
#if defined(PRECISION_z) || defined(PRECISION_c)
    cuDoubleComplex zone  = make_cuDoubleComplex( 1., 0.);
    cuDoubleComplex mzone = make_cuDoubleComplex(-1., 0.);
#else
    double zone  =  1.;
    double mzone = -1.;
#endif

    int tempmm = (m == (descA->nt-1)) ? (descA->n - m * descA->nb) : descA->nb;
    int ldak = BLKLDD( descA, k );
    int ldan = BLKLDD( descA, n );

    cublasStatus_t status;
    cublasSetKernelStream( parsec_body.stream );
    cublasZgemm( dplasma_lapack_const(dplasmaConjTrans), 'N',
                 descA->mb, tempmm, descA->mb,
                 mzone, (cuDoubleComplex*)A, ldak,
                        (cuDoubleComplex*)B, ldak,
                 zone,  (cuDoubleComplex*)C, ldan );
    status = cublasGetError();
    PARSEC_CUDA_CHECK_ERROR( "cublasZgemm ", status, {return PARSEC_HOOK_RETURN_ERROR;} );
}
END

BODY
{
    int tempmm = (m == (descA->nt-1)) ? (descA->n - m * descA->nb) : descA->nb;
    int ldak = BLKLDD( descA, k );
    int ldan = BLKLDD( descA, n );

    printlog("CORE_potrf_zgemm(%d, %d, %d)\n"
             "\t(dplasmaConjTrans, dplasmaNoTrans, descA->mb, tempmm, descA->mb, -1, A(%d,%d)[%p], ldak, A(%d,%d)[%p], ldak, 1., A(%d,%d)[%p], descA->mb)\n",
             k, m, n, k, n, A, k, m, B, n, m, C);

    CORE_zgemm(dplasmaConjTrans, dplasmaNoTrans,
               descA->mb, tempmm, descA->mb,
               -1., A /* descA(k,n) */, ldak,
                    B /* descA(k,m) */, ldak,
                1., C /* descA(n,m) */, ldan );
}
END

trtri_ztrsmL(k, n)
  /* Execution Space */
  k = 0    ..(descA->nt-2)
  n = (k+1)..(descA->nt-1)

  /* Locality */
  : descA(k,n)

  READ  A    <- A potrf_zpotrf(k)
  RW    B    <- B potrf_ztrsm(k, n)
             -> (n == (k+1)) ? A trtri_zgemm(n, n-1, (n+1)..(descA->nt-1))
             -> (n == (k+1)) ? B trtri_ztrsmR(n, n-1)
             -> (n >  (k+1)) ? C trtri_zgemm(k+1, k, n)
             -> B trtri_zgemm(k, 0..(k-1), n)

  CTL   ctl0 <- ctl0 potrf_zherk(k, n)
  CTL   ctl1 <- ctl1 potrf_zgemm(k, (n+1)..(descA->nt-1), n)
  CTL   ctl2 <- ctl2 potrf_zgemm(k, n, (k+1)..(n-1))
  CTL   ctl3 -> (k == 0) ? ctl3 trtri_ztrtri(k)

; 30

BODY
{
    int tempkm = (k == (descA->mt-1)) ? (descA->m - k * descA->mb) : descA->mb;
    int tempnn = (n == (descA->nt-1)) ? (descA->n - n * descA->nb) : descA->nb;
    int ldak = BLKLDD( descA, k );


    printlog("CORE_trtri_ztrsmL(%d, %d)\n"
             "\t(dplasmaLeft, dplasmaUpper, dplasmaNoTrans, dplasmaNonUnit, tempkm, tempnn, -1, A(%d,%d)[%p], ldak, A(%d,%d)[%p], ldak)\n",
             k, n, k, k, A, k, n, B);

    CORE_ztrsm(dplasmaLeft, dplasmaUpper, dplasmaNoTrans, dplasmaNonUnit,
               tempkm, tempnn,
               -1., A /* descA(k,k) */, ldak,
                    B /* descA(k,n) */, ldak );
}
END

trtri_zgemm(k, m, n)
  /* Execution Space */
  k = 1    ..(descA->nt-2)
  m = 0    ..(k-1)
  n = (k+1)..(descA->nt-1)

  /* Locality */
  : descA(m,n)

  READ  A    <- (k == (m+1)) ? B trtri_ztrsmL(m+1-1, m+1) : C trtri_zgemm(k-1, m, k)
  READ  B    <- B trtri_ztrsmL(k, n)
  RW    C    <- (k == (m+1)) ? B trtri_ztrsmL(m, n) : C trtri_zgemm(k-1, m, n)
             -> (n == (k+1)) ? B trtri_ztrsmR(n, m) : C trtri_zgemm(k+1, m, n)
             -> (n == (k+1)) ? A trtri_zgemm(n, m, (n+1)..(descA->nt-1))

  CTL   ctl4 -> ctl4 trtri_ztrsmR(k, m)
  CTL   ctl5 <- ctl5 trtri_zgemm(m, 0..(m-1), n)
             -> ctl5 trtri_zgemm((k+1)..(n-1), k, n)
  CTL   ctl6 -> (n == (k+1)) ? ctl6 trtri_ztrsmR(k+1, k)

; 30

BODY [type=CUDA]
{
#if defined(PRECISION_z) || defined(PRECISION_c)
    cuDoubleComplex zone  = make_cuDoubleComplex( 1., 0.);
#else
    double zone  =  1.;
#endif

    int tempnn = (n == (descA->nt-1)) ? (descA->n - n * descA->nb) : descA->nb;
    int tempkm = (k == (descA->mt-1)) ? (descA->m - k * descA->mb) : descA->mb;
    int ldam = BLKLDD( descA, m );
    int ldak = BLKLDD( descA, k );

    cublasStatus_t status;
    cublasSetKernelStream( parsec_body.stream );
    cublasZgemm( 'N', 'N',
                 descA->mb, tempnn, tempkm,
                 zone, (cuDoubleComplex*)A, ldam,
                       (cuDoubleComplex*)B, ldak,
                 zone, (cuDoubleComplex*)C, ldam );
    status = cublasGetError();
    PARSEC_CUDA_CHECK_ERROR( "cublasZgemm ", status, {return PARSEC_HOOK_RETURN_ERROR;} );
}
END

BODY
{
    int tempnn = (n == (descA->nt-1)) ? (descA->n - n * descA->nb) : descA->nb;
    int tempkm = (k == (descA->mt-1)) ? (descA->m - k * descA->mb) : descA->mb;
    int ldam = BLKLDD( descA, m );
    int ldak = BLKLDD( descA, k );

    printlog("CORE_trtri_zgemm(%d, %d, %d)\n"
             "\t(dplasmaNoTrans, dplasmaNoTrans, descA->mb, tempnn, tempkm, 1., A(%d,%d)[%p], ldam, A(%d,%d)[%p], ldak, 1., A(%d,%d)[%p], ldam)\n",
             k, m, n, m, k, A, k, n, B, m, n, C);

    CORE_zgemm(dplasmaNoTrans, dplasmaNoTrans,
               descA->mb, tempnn, tempkm,
               1., A /* descA(m,k) */, ldam,
                   B /* descA(k,n) */, ldak,
               1., C /* descA(m,n) */, ldam );
}
END

trtri_ztrsmR(k, m)
  /* Execution Space */
  k = 1..(descA->mt-1)
  m = 0..(k-1)

  /* Locality */
  : descA(m,k)

  READ  A    <- A potrf_zpotrf(k)
  RW    B    <- (k == (m+1)) ? B trtri_ztrsmL(k-1, k) : C trtri_zgemm(k-1, m, k)
             -> A lauum_zherk(k, m)
             -> B lauum_ztrmm(k, m)
             -> A lauum_zgemm(k, m, (m+1)..(k-1))
             -> B lauum_zgemm(k, 0..(m-1), m)

  CTL   ctl4 <- ctl4 trtri_zgemm(k, m, (k+1)..(descA->nt-1))
  CTL   ctl6 <- (k == (m+1)) ? ctl6 trtri_zgemm(k-1, 0..(k-2), k)
  CTL   ctl7 -> ctl7 trtri_ztrtri(k)

; 30

BODY
{
    int tempkm = (k == (descA->mt-1)) ? (descA->m - k * descA->mb) : descA->mb;
    int ldak = BLKLDD( descA, k );
    int ldam = BLKLDD( descA, m );


    printlog("CORE_trtri_ztrsmR(%d, %d)\n"
             "\t(dplasmaRight, dplasmaUpper, dplasmaNoTrans, dplasmaNonUnit, descA->mb, tempkm, 1., A(%d,%d)[%p], ldak, A(%d,%d)[%p], ldam)\n",
             k, m, k, k, A, m, k, B);
    CORE_ztrsm(dplasmaRight, dplasmaUpper, dplasmaNoTrans, dplasmaNonUnit,
               descA->mb, tempkm,
               1., A /* descA(k,k) */, ldak,
                   B /* descA(m,k) */, ldam );
}
END

trtri_ztrtri(k)
  /* Execution Space */
  k = 0..(descA->mt-1)

  /* Locality */
  : descA(k,k)

  RW    A    <- A potrf_zpotrf(k)
             -> A lauum_zlauum(k)
             -> A lauum_ztrmm(k, 0..(k-1))

  CTL   ctl3 <- (k == 0) ? ctl3 trtri_ztrsmL(0, 1..(descA->nt-1))
  CTL   ctl7 <- (k >  0) ? ctl7 trtri_ztrsmR(k, 0..(k-1))

; 30

BODY
{
    int tempkm = (k == (descA->mt-1)) ? (descA->m - k * descA->mb) : descA->mb;
    int ldak = BLKLDD( descA, k );
    int info = 0;


    printlog("CORE_trtri_ztrtri(%d)\n"
             "\t(dplasmaUpper, dplasmaNonUnit, tempkm, A(%d,%d)[%p], ldak, descA->mb*k)\n",
             k, k, k, A);

    CORE_ztrtri(dplasmaUpper, dplasmaNonUnit, tempkm,
                A /* descA(k,k) */, ldak, &info );
}
END

lauum_zherk(k, m)
  /* Execution Space */
  k = 1..(descA->mt-1)
  m = 0..(k-1)

  /* Locality */
  : descA(m,m)

  READ  A    <- B trtri_ztrsmR(k, m)
  RW    B    <- (k == (m+1)) ? A lauum_zlauum(k-1) : B lauum_zherk(k-1, m)
             -> (k <  (descA->nt-1)) ? B lauum_zherk(k+1, m)
             -> (k == (descA->nt-1)) ? descA(m, m)

  CTL   ctl8 -> ctl8 lauum_ztrmm(k, m)

; 20

BODY
{
    int tempkn = (k == (descA->nt-1)) ? (descA->n - k * descA->nb) : descA->nb;
    int ldam = BLKLDD( descA, m );


    printlog("CORE_lauum_zherk(%d, %d)\n"
             "\t(dplasmaUpper, dplasmaNoTrans, descA->mb, tempkn, 1., A(%d,%d)[%p], ldam, 1., A(%d,%d)[%p], ldam)\n",
             k, m, m, k, A, m, m, B);

    CORE_zherk(dplasmaUpper, dplasmaNoTrans,
               descA->mb, tempkn,
               1., A /* descA(m,k) */, ldam,
               1., B /* descA(m,m) */, ldam );
}
END

lauum_zgemm(k, m, n)
  /* Execution Space */
  k = 2    ..(descA->mt-1)
  m = 0    ..(k-2)
  n = (m+1)..(k-1)

  /* Locality */
  : descA(m,n)

  READ  A    <- B trtri_ztrsmR(k, m)
  READ  B    <- B trtri_ztrsmR(k, n)
  RW    C    <- (k == (n+1)) ? B lauum_ztrmm(k-1, m) : C lauum_zgemm(k-1, m, n)
             -> (k == (descA->nt-1)) ? descA(m, n)
             -> (k <  (descA->nt-1)) ? C lauum_zgemm(k+1, m, n)

  CTL   ctl9  -> ctl9  lauum_ztrmm(k, m)
  CTL   ctl10 -> ctl10 lauum_ztrmm(k, n)

; 20

BODY [type=CUDA]
{
#if defined(PRECISION_z) || defined(PRECISION_c)
    cuDoubleComplex zone  = make_cuDoubleComplex( 1., 0.);
#else
    double zone  =  1.;
#endif

    int tempkn = (k == (descA->nt-1)) ? (descA->n - k * descA->nb) : descA->nb;
    int ldam = BLKLDD( descA, m );
    int ldan = BLKLDD( descA, n );

    cublasStatus_t status;
    cublasSetKernelStream( parsec_body.stream );
    cublasZgemm( 'N', dplasma_lapack_const(dplasmaConjTrans),
                 descA->mb, descA->nb, tempkn,
                 zone, (cuDoubleComplex*)A, ldam,
                       (cuDoubleComplex*)B, ldan,
                 zone, (cuDoubleComplex*)C, ldam );
    status = cublasGetError();
    PARSEC_CUDA_CHECK_ERROR( "cublasZgemm ", status, {return PARSEC_HOOK_RETURN_ERROR;} );
}
END

BODY
{
    int tempkn = (k == (descA->nt-1)) ? (descA->n - k * descA->nb) : descA->nb;
    int ldam = BLKLDD( descA, m );
    int ldan = BLKLDD( descA, n );

    printlog("CORE_lauum_zgemm(%d, %d, %d)\n"
             "\t(dplasmaNoTrans, dplasmaConjTrans, descA->mb, descA->nb, tempkn, 1., A(%d,%d)[%p], ldam, A(%d,%d)[%p], ldan, 1., A(%d,%d)[%p], ldam)\n",
             k, m, n, m, k, A, n, k, B, m, n, C);

    CORE_zgemm(dplasmaNoTrans, dplasmaConjTrans,
               descA->mb, descA->nb, tempkn,
               1., A /* descA(m,k) */, ldam,
                   B /* descA(n,k) */, ldan,
               1., C /* descA(m,n) */, ldam );
}
END

lauum_ztrmm(k, m)
  /* Execution Space */
  k = 1..(descA->mt-1)
  m = 0..(k-1)

  /* Locality */
  : descA(m,k)

  READ  A    <- A trtri_ztrtri(k)
  RW    B    <- B trtri_ztrsmR(k, m)
             -> (k == (descA->nt-1)) ? descA(m, k)
             -> (k <  (descA->nt-1)) ? C lauum_zgemm(k+1, m, k)

  CTL   ctl8  <- ctl8  lauum_zherk(k, m)
  CTL   ctl9  <- ctl9  lauum_zgemm(k, m, (m+1)..(k-1))
  CTL   ctl10 <- ctl10 lauum_zgemm(k, 0..(m-1), m)
  CTL   ctl11 -> ctl11 lauum_zlauum(k)

; 20

BODY
{
    int tempkn = (k == (descA->nt-1)) ? (descA->n - k * descA->nb) : descA->nb;
    int ldak = BLKLDD( descA, k );
    int ldam = BLKLDD( descA, m );


    printlog("CORE_lauum_ztrmm(%d, %d)\n"
             "\t(dplasmaRight, dplasmaUpper, dplasmaConjTrans, dplasmaNonUnit, descA->mb, tempkn, 1., A(%d,%d)[%p], ldak, A(%d,%d)[%p], ldam)\n",
             k, m, k, k, A, m, k, B);

    CORE_ztrmm(dplasmaRight, dplasmaUpper, dplasmaConjTrans, dplasmaNonUnit,
               descA->mb, tempkn,
               1., A /* descA(k,k) */, ldak,
                   B /* descA(m,k) */, ldam );
}
END

lauum_zlauum(k)
  /* Execution Space */
  k = 0..(descA->mt-1)

  /* Locality */
  : descA(k,k)

  RW    A    <- A trtri_ztrtri(k)
             -> (k == (descA->nt-1)) ? descA(k, k)
             -> (k <  (descA->nt-1)) ? B lauum_zherk(k+1, k)

  CTL   ctl11 <- ctl11 lauum_ztrmm(k, 0..(k-1))

; 20

BODY
{
    int tempkn = (k == (descA->nt-1)) ? (descA->n - k * descA->nb) : descA->nb;
    int ldak = BLKLDD( descA, k );


    printlog("CORE_lauum_zlauum(%d)\n"
             "\t(dplasmaUpper, tempkn, A(%d,%d)[%p], ldak)\n",
             k, k, k, A);

    CORE_zlauum(dplasmaUpper, tempkn,
                A /* descA(k,k) */, ldak );
}
END

